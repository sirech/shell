# -*- mode: ruby -*-
# Credit to https://github.com/logankoester/irbrc/blob/master/irbrc

#
# REQUIRE's
#

# Require library, catching possible exceptions. A block can be passed
# for initialization
#
# Credit to http://stackoverflow.com/questions/123494/whats-your-favourite-irb-trick
def desire(what, &block)
  loaded, require_result = false, nil

  begin
    require_result = require what
    loaded = true
  rescue LoadError
    puts "** Warning: Not installed: '#{what}'"
  rescue Exception => ex
    puts "** Unable to require '#{what}'"
    puts "--> #{ex.class}: #{ex.message}"
  end

  yield if loaded and block_given?

  require_result
end

# Make gems available
desire 'rubygems'

# Load all the configuration files
if ENV['SHELL_DIR']
  Dir.glob(File.join(ENV['SHELL_DIR'], 'irbrc', '*.rb')) do |file|
    require file
  end
end

# http://drnicutilities.rubyforge.org/map_by_method/
desire 'map_by_method'

# Dr Nic's gem inspired by
# http://redhanded.hobix.com/inspect/stickItInYourIrbrcMethodfinder.html
desire 'what_methods'

# Pretty Print method
desire 'pp'

# Awesome Print gem (gem install awesome_print)
desire 'ap'

# Print information about any HTTP requests being made
desire 'net-http-spy'

# 'lp' to show method lookup path
desire 'looksee'

# Tab Completion
desire 'irb/completion'


# http://sketches.rubyforge.org/
desire('sketches') do
  Sketches.config :editor => 'vim'
end

# Bond (Bash-like tab completion)
desire('bond') do
  Bond.start
end


#
# ENV
#

# Load the readline module.
IRB.conf[:USE_READLINE] = true

# Automatic Indentation
IRB.conf[:AUTO_INDENT]=true


#
# DEFUNS
#

# Quick way to run just a few specific lines from a file
def eval_lines(fn, lines)
  eval( File.readlines(fn)[lines].join)
end
